---
# Install the tekton operator
- name: "Get console URL"
  shell: "grep 'server:' {{ cluster_dir }}/auth/kubeconfig | awk '{print $2}' | sed 's/https:\\/\\/api.\\(.*\\):6443/https:\\/\\/console-openshift-console.apps.\\1/'"
  register: kubeconfig_console_url

- name: "Check if the uri is up for cluster {{ cluster_name }}"
  uri:
    url: "{{ kubeconfig_console_url.stdout }}"
    validate_certs: no
  register: ocp_url_status
  until: ocp_url_status.status == 200
  retries: 10
  delay: 6

- name: "Login to cluster as {{ kubeadmin }}"
  shell: "./oc login -u {{ kubeadmin }} -p $( cat {{ cluster_dir }}/auth/kubeadmin-password ) --insecure-skip-tls-verify=true $( grep 'server:' {{ cluster_dir }}/auth/kubeconfig | awk '{print $2}' )"
  args:
    chdir: "{{ ocp_install_dir }}"

- name: "Deploy version of openshift-pipelines subscription"
  template:
    src: "openshift-pipelines-operator-sub.yaml.j2"
    dest: "{{ cluster_dir }}/openshift-pipelines-operator-sub.yaml"

- name: "Subscribe to the openshift-pipelines-operator in the openshift market place"
  shell: "./oc apply -f {{ cluster_dir }}/openshift-pipelines-operator-sub.yaml"
  args:
    chdir: "{{ ocp_install_dir }}"

- name: "Pause for 30 seconds for the operator to be installed via the marketplace"
  pause:
    seconds: 30

- name: "Add openshift-pipelines functionality to the cluster"
  shell: "./oc apply -f {{ role_path }}/files/openshift-pipelines-operator-instance.yaml"
  args:
    chdir: "{{ ocp_install_dir }}"

- name: "Find and install the latest tektoncd :: tkn cli"
  include_tasks: install_tkn_cli.yml